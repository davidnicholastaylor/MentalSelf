@model MentalSelf.Models.ViewModels.QuestionResponseViewModel

@{
    ViewData["Title"] = Model.Test.Title;
    ViewData["Message"] = "In the past two weeks, how often have you experienced any of the following?";
    ViewData["Message2"] = "In the past two weeks, how often has your child experienced any of the following?";
}


<h2>@ViewData["Title"]</h2>
<br />
@if(Model.Test.TestId != 3){
<h4>@ViewData["Message"]</h4>
} else {
<h4>@ViewData["Message2"]</h4>
}

<table class="table">
    <tbody>
        <tr>
            <td class="col-md-10">
                @*Create form *@
                <form method="post" asp-action="Create" asp-controller="Tests">
                    @*Validate everything in this div based on the View Model being used*@
                    <div asp-validation-summary="ModelOnly"></div>

                        @*Store below information into UserTest specified by TestId*@
                        <div asp-for="@Model.UserTest.TestId">
                        <div id="myCarousel" class="carousel slide" data-ride="carousel" data-interval="false">
                            @*Create [i] interator based on number of Questions in Questions List*@
                            <div class="carousel-inner" role="listbox">
                                <div class="item active">
                                    
                                    <img src="~/images/carousel-desktop.jpeg" object-fit="fill" alt="carousel" class="img-responsive" />
                                    
                                    <div class="carousel-caption" role="option">
                                        <h4>
                                            This is a self-assessment test. It is designed to help you better understand yourself. There are no wrong answers - only honest responses.
                                        </h4>
                                    </div>
                                </div>
                                @for (var i = 0; i < Model.Questions.Count; i++)
                                {
                                    <div class="item">
                                        <img src="~/images/carousel-desktop.jpeg" object-fit="fill" alt="carousel" class="img-responsive" />
                                        <div class="carousel-caption" role="option">

                                            <div class="row">
                                                @*Create hidden input for [i] interated responses containing the QuestionId based on the value of the [i] interated questions containing the QuestionId*@
                                                <input type="hidden" asp-for="@Model.Responses[i].QuestionId" value="@Model.Questions[i].QuestionId" />
                                                @*Display question descriptions based on the [i] iterated questions*@
                                                <h4>@Model.Questions[i].QuestionDesc</h4>
                                            </div>
                                            @*Create [r] iterator based on number of UserResponses in UserResponses List*@
                                            @for (var r = 0; r < Model.UserResponses.Count; r++)
                                            {
                                                <div class="row">
                                                    @*
                            Create input for [i] iterated responses containing UseerResponseId
                            Give input an id based on both iterators
                            Give input value of [r] interated UserResponses containing UserResponseId
                            Give input type of radio button
                                                    *@
                                                    <input asp-for="@Model.Responses[i].UserResponseId"
                                                           id=@($"rating-{i}-{r}")
                                                           value="@(Model.UserResponses[r].UserResponseId)"
                                                           type="radio" />
                                                    @*Create label for input based on the same input id*@
                                                    @*Display [r] iterated UserResponses containing Rating*@
                                                    <label for=@($"rating-{i}-{r}")>
                                                        @(Model.UserResponses[r].Rating)
                                                    </label>
                                                </div>
                                            }
                                        </div>
                                    </div>
                                }
                            </div>
                        <a class="left carousel-control" href="#myCarousel" role="button" data-slide="prev">
                            <span class="glyphicon glyphicon-chevron-left" aria-hidden="true"></span>
                            <span class="sr-only">Previous</span>
                        </a>
                        <a class="right carousel-control" href="#myCarousel" role="button" data-slide="next">
                            <span class="glyphicon glyphicon-chevron-right" aria-hidden="true"></span>
                            <span class="sr-only">Next</span>
                        </a>
                        </div>
                    </div>
                    <br/>
                    <br/>
                                @*Submit button for form*@
                                <div>
                                    <input type="submit" value="Submit" class="btn btn-success" />
                                </div>
                                </br>
                </form>
                @*Button to go back to Index*@
                <div>
                    <a class="btn btn-danger" role="button" asp-action="Index" asp-route-id="@Model.Test.TestId">Cancel</a>
                </div>
            </td>
        </tr>
    </tbody>
</table>



@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

